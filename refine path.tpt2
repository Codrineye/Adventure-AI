:import adventure_lib
:name {package}:refine path

:global string leon.adventure.path

:local vector curPos
:local int stepCount

#curDirection sub(leon.adventure.path, stepCount, 1)
#insert(st,i,val) sub({st},0,{i}) . ({val}) . sub({st},{i},99999)
#escapeDirection if(\
  adventure.entityType(curPos + vec(0., 1.)) == ""\
    && adventure.entityType(curPos + vec(0., 2.)) == ""\
    && false == adventure.isWall(curPos + vec(0., 1.)),\
  "BUUWDD",\
  if(\
    adventure.entityType(curPos + vec(0., -1.)) == ""\
      && adventure.entityType(curPos + vec(0., -2.)) == ""\
      && false == adventure.isWall(curPos + vec(0., -1.)),\
    "BDDWUU",\
    if(\
      adventure.entityType(curPos + vec(-1., 0.)) == ""\
        && adventure.entityType(curPos + vec(-2., 0.)) == ""\
        && false == adventure.isWall(curPos + vec(-1., 0.)),\
      "BLLWRR",\
      "BRRWLL"\
    )\
  )\
)

curPos = adventure.playerPos()
goto(start)

rock:
leon.adventure.path = {insert(\
  leon.adventure.path,\
  stepCount,\
  if(adventure.hasItem("eodArmor"), "BWWW", {escapeDirection})\
)}
stepCount += if(adventure.hasItem("eodArmor"), 4, 6)

nextTile:
stepCount += 1
start:
curPos += {nextDir({curDirection})}

; At this point, curPos has applied the movement of leon.adventure.path[stepCount],
; but stepCount is not yet incremented. This is so anything that is inserted will
; be inserted *before* the just-applied move, i.e. if we find a rock we will
; insert our bomb sequence *before* the move onto its square.
goto(if(\
  stepCount >= len(leon.adventure.path),\
  end,\
  if(\
    adventure.entityType(curPos) != "Rock" || adventure.hasItem("hammer"),\
    nextTile,\
    rock\
  )\
))
end:
    wait(0.)
