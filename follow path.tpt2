:import adventure_lib
:name {package}:follow path

:global string leon.adventure.path
:global int leon.adventure.running

:local int stepCount
:local double curPos
:local string status

#nextDirection sub(leon.adventure.path,stepCount,1)
#nextMove {move({nextDirection})}

#playerPos x(adventure.playerPos())+19.*y(adventure.playerPos())
#status adventure.entityType({posToVec({nextField({nextDirection})})})

stepCount = -1
loop:
stepCount+=1
goto(ternary.int(stepCount>=len(leon.adventure.path)||leon.adventure.running!=1,end,ternary.int({nextDirection}=="B",bomb,ternary.int({nextDirection}=="W",wait,move))))
move:
    curPos = {playerPos}
    status = {status}
    move2:
      executesync("TE2.2:stop")
      adventure.move({nextMove})
      executesync("TE2.2:start")
  goto(ternary.int(curPos!={playerPos}||status!={status},loop,move2))
bomb:
    executesync("TE2.2:stop")
    adventure.placeBomb()
    executesync("TE2.2:start")
  goto(loop)
wait:
    executesync("TE2.2:stop")
    adventure.wait()
    executesync("TE2.2:start")
  goto(loop)
end:
wait(0.)
