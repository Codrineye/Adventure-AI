:global string leon.adventure.path
:global int leon.adventure.target_pos

:local int curPos
:local string queue
:local string field
:local string path


#goRight a.i(curPos,"+",1)
#goLeft a.i(curPos,"-",1)
#goUp a.i(curPos,"+",19)
#goDown a.i(curPos,"-",19)
#distance(x,y) ({x}%19)-({y}%19)+({x}/19)-({y}/19)
#posToVec(x) vec(i2d({x}%19),i2d({x}/19))
#posToString(p) concat(ternary.string(len(i2s({p}))==1,"00",\
	ternary.string(len(i2s({p}))==2,"0","")),i2s({p}))
#firstElementPos s2i(sub(queue,0,3),-1)
#firstElementDir sub(queue,3,1)
#pop queue=sub(queue,5,a.i(len(queue),"-",5))
#replace(st,i,val) {st}=concat(concat(sub({st},0,{i}),{val}),sub({st},{i}+1,a.i(len({st}),"-",{i}+1)))

start:
executesync("turbo start")
queue = concat({posToString(d2i(x(adventure.playerPos()))+a.i(19,"*",d2i(y(adventure.playerPos()))))},"S:")
field = "{lua(return string.rep("0",362))}"
loop1:
	curPos = {firstElementPos}
    {replace(field, curPos, {firstElementDir})}
    {pop}
	queue= concat(queue,concat(concat(concat(\
    	ternary.string(false == adventure.isWall({posToVec({goUp})}) && \
        	false == contains(queue,{posToString({goUp})}) && \
            {goUp}<361 &&\
            sub(field,{goUp},1)=="0" ,\
           	concat({posToString({goUp})},"U:"),""),\
        ternary.string(false == adventure.isWall({posToVec({goDown})}) && \
        	false == contains(queue,{posToString({goDown})}) && \
            {goDown}>=0 &&\
            sub(field,{goDown},1)=="0" , \
           	concat({posToString({goDown})},"D:"),"")) ,\
        ternary.string(false == adventure.isWall({posToVec({goRight})}) && \
        	false == contains(queue,{posToString({goRight})}) && \
            sub(field,{goRight},1)=="0"&&\
            {distance({goRight},curPos)}<=1,\
           	concat({posToString({goRight})},"R:"),"")),\
        ternary.string(false == adventure.isWall({posToVec({goLeft})}) && \
        	false == contains(queue,{posToString({goLeft})}) && \
            sub(field,{goLeft},1) == "0"&&\
            {distance({goLeft},curPos)}<=1,\
           	concat({posToString({goLeft})},"L:"),"")))
  gotoif(loop1,len(queue)>0&&curPos!=leon.adventure.target_pos)
loop2:
	path=concat(sub(field,curPos,1),path)
    curPos=ternary.int(sub(path,0,1)=="U",{goDown},ternary.int(sub(path,0,1)=="D",{goUp},\
    	ternary.int(sub(path,0,1)=="R",{goLeft},ternary.int(sub(path,0,1)=="L",{goRight},curPos))))
  gotoif(loop2,sub(field,curPos,1)!="S")
leon.adventure.path = ternary.string(path=="S","",path)
executesync("leon.adventure:refine path")
end:
executesync("turbo stop")
wait(0.0)














