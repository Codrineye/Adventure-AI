:import adventure_lib
:name {package}:find path

:budget_cap 1

:global string leon.adventure.path

:local vector curPos
:local string queue
:local string idx
:local string dir
:local string path
:local bool cantPhase

#setField(index, value) lss("_f" . {index}, {value})
#getField(index) lsg("_f" . {index})

leon.adventure.path = ""
cantPhase = not(adventure.hasItem("bootsPhasing"))\
|| 0 < max(\
  max(\
    adventure.countEntities("Elite"),\
    adventure.countEntities("Chest")\
  ),\
  adventure.countEntities("Enemy")\
)
queue = {vecToString(adventure.playerPos())} . "S:"

loop1:
curPos = {firstElementPos}
idx = sub(queue, 0, 4)
; if this field is already set, we set an empty field to the direction
; otherwise, it's empty and we assign it to idx
{setField(if(contains("", {getField(idx)}), idx, ""), {firstElementDir})}
; 
queue = if(\
  {getField(idx)} != {firstElementDir},\
  sub(queue, 6, 99999),\
  sub(queue, 6, 99999) . if(\
    adventure.isWall(curPos + vec(0.0, 1.0)) && cantPhase\
      || max(x(curPos), y(curPos)) >= 18.0\
      || x(curPos) < 1.0,\
    "",\
    {posToString(x(curPos), y(curPos) + 1.0)} . "U:"\
  ) . if(\
    adventure.isWall(curPos + vec(0.0, -1.0)) && cantPhase\
      || min(x(curPos), y(curPos)) < 1.0\
      || x(curPos) >= 18.0,\
    "",\
    {posToString(x(curPos), y(curPos) - 1.0)} . "D:"\
  ) . if(\
    adventure.isWall(curPos + vec(1.0, 0.0)) && cantPhase\
      || max(x(curPos), y(curPos)) >= 18.0\
      || y(curPos) < 1.0,\
    "",\
    {posToString(x(curPos) + 1.0, y(curPos))} . "R:"\
  ) . if(\
    adventure.isWall(curPos + vec(-1.0, 0.0)) && cantPhase\
      || min(x(curPos), y(curPos)) < 1.0\
      || y(curPos) >= 18.0,\
    "",\
    {posToString(x(curPos) - 1.0, y(curPos))} . "L:"\
  )\
)
goto(if(\
  contains("", queue) || contains(idx, sub({target.getPositions}, 0, 4)),\
  l2start,\
  loop1\
))

loop2:
leon.adventure.path = dir . leon.adventure.path
curPos -= {nextDir(dir)}
idx = {vecToString(curPos)}

l2start:
dir = {getField(idx)}
gotoif(loop2, dir != "S")

executesync("{package}:refine path")
