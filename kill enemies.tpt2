:import adventure_lib
:name {package}:kill enemies

#enemyInDir(x, y) adventure.isEnemy(adventure.playerPos() + vec({x},{y}))
#enemyDirection if({enemyInDir(0., 1.)}, vec(0., 1.),\
    if({enemyInDir(1., 0.)}, vec(1., 0.),\
    if({enemyInDir(0., -1.)}, vec(0., -1.),\
    if({enemyInDir(-1., 0.)}, vec(-1., 0.), vec(0., 0.)))))
#anyEnemies {enemyInDir(0., 1.)} || {enemyInDir(0., -1.)} || {enemyInDir(1., 0.)} || {enemyInDir(-1., 0.)}

key.k()

isopen("arcade")

goto(if(contains(impulse(), "key"), turbostart, loop))
wait:
adventure.wait()

attack:
executesync("TE2.2:stop")
adventure.move({enemyDirection})

turbostart:
executesync("TE2.2:start")

loop:
goto(if(\
  {anyEnemies},\
  attack,\
  if(\
    max(max(adventure.countEntities("Enemy"), adventure.countEntities("Elite")), adventure.countEntities("Mimic")) > 0,\
    wait,\
    if(impulse()=="key.k", stop, end)\
  )\
))
stop:
executesync("TE2.2:stop")
end:
wait(0.)
