:import adventure_lib
:name {package}:clear room

:global int leon.adventure.maxDifficulty
:global string leon.adventure.path
:global string leon.adventure.targetPositions

:global string leon.adventure.room_direction
:local double difficulty

#nextRoomLower if(\
  x(adventure.roomCoords()) < 127.0 && y(adventure.roomCoords()) >= 127.0,\
  "R",\
  if(\
    x(adventure.roomCoords()) >= 127.0 && y(adventure.roomCoords()) > 127.0,\
    "D",\
    if(\
      x(adventure.roomCoords()) > 127.0 && y(adventure.roomCoords()) <= 127.0,\
      "L",\
      "U" \
    )\
  )\
)
#rotateLeft(x) sub("LDRU", index("ULDR", {x}, 0), 1)
#condRotateLeft(cond, x) sub(if({cond}, "LDRU", "ULDR"), index("ULDR", {x}, 0), 1)

executesync("{package}:kill enemies")
executesync("{package}:farm keys")

; We check based on current difficulty plus 1, because it's more efficient
; that way.
difficulty = {cur_difficulty(1.)}
leon.adventure.room_direction = if(\
  difficulty == 1. && leon.adventure.room_direction != "",\
  {rotateLeft(leon.adventure.room_direction)},\
  {condRotateLeft({survivable(difficulty)}, {nextRoomLower})}\
)

leon.adventure.targetPositions = sub(\
    "0918 0009 1809 0900",\
    index("U    L    R    D", leon.adventure.room_direction, 0),\
    4\
) . ":"

executesync("{package}:find loot")
leon.adventure.path = leon.adventure.room_direction
executesync("{package}:follow path")
end:
wait(0.)
